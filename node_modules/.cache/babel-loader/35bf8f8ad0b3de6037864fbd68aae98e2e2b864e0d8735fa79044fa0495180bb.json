{"ast":null,"code":"import Axios from 'axios';\nimport { searchRequest, searchSuccess, searchError, setQuery, setPage } from './search-actions';\nexport const fetchContacts = createAsyncThunk(searchRequest, async (_, thunkAPI) => {\n  try {\n    const data = await Axios.get(`https://api.github.com/search/repositories?q=${query}&per_page=20&page=${page}`);\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nconst search = function () {\n  let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'react';\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return async dispatch => {\n    dispatch(searchRequest());\n    try {\n      const {\n        data\n      } = await Axios.get(`https://api.github.com/search/repositories?q=${query}&per_page=20&page=${page}`);\n      dispatch(searchSuccess(data));\n      dispatch(setQuery(query));\n      dispatch(setPage(page));\n    } catch (error) {\n      dispatch(searchError(error.message));\n    }\n  };\n};\nexport { search };","map":{"version":3,"names":["Axios","searchRequest","searchSuccess","searchError","setQuery","setPage","fetchContacts","createAsyncThunk","_","thunkAPI","data","get","query","page","error","rejectWithValue","search","arguments","length","undefined","dispatch","message"],"sources":["/home/dmytro/Documents/GitHub/goit_last/goit_gh/src/redux/search/search-operations.js"],"sourcesContent":["import Axios from 'axios';\r\nimport { searchRequest, searchSuccess, searchError, setQuery, setPage } from './search-actions';\r\n\r\nexport const fetchContacts = createAsyncThunk(searchRequest, async (_, thunkAPI) => {\r\n    try {\r\n        const data = await Axios.get(`https://api.github.com/search/repositories?q=${query}&per_page=20&page=${page}`);\r\n        return data;\r\n    } catch (error) {\r\n        return thunkAPI.rejectWithValue(error);\r\n    }\r\n});\r\n\r\nconst search =\r\n    (query = 'react', page = 1) =>\r\n    async dispatch => {\r\n        dispatch(searchRequest());\r\n\r\n        try {\r\n            const { data } = await Axios.get(\r\n                `https://api.github.com/search/repositories?q=${query}&per_page=20&page=${page}`\r\n            );\r\n            dispatch(searchSuccess(data));\r\n            dispatch(setQuery(query));\r\n            dispatch(setPage(page));\r\n        } catch (error) {\r\n            dispatch(searchError(error.message));\r\n        }\r\n    };\r\n\r\nexport { search };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,aAAa,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,kBAAkB;AAE/F,OAAO,MAAMC,aAAa,GAAGC,gBAAgB,CAACN,aAAa,EAAE,OAAOO,CAAC,EAAEC,QAAQ,KAAK;EAChF,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,gDAA+CC,KAAM,qBAAoBC,IAAK,EAAC,CAAC;IAC9G,OAAOH,IAAI;EACf,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZ,OAAOL,QAAQ,CAACM,eAAe,CAACD,KAAK,CAAC;EAC1C;AACJ,CAAC,CAAC;AAEF,MAAME,MAAM,GACR,SAAAA,CAAA;EAAA,IAACJ,KAAK,GAAAK,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,OAAO;EAAA,IAAEJ,IAAI,GAAAI,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,OAC1B,MAAMG,QAAQ,IAAI;IACdA,QAAQ,CAACnB,aAAa,CAAC,CAAC,CAAC;IAEzB,IAAI;MACA,MAAM;QAAES;MAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAC3B,gDAA+CC,KAAM,qBAAoBC,IAAK,EACnF,CAAC;MACDO,QAAQ,CAAClB,aAAa,CAACQ,IAAI,CAAC,CAAC;MAC7BU,QAAQ,CAAChB,QAAQ,CAACQ,KAAK,CAAC,CAAC;MACzBQ,QAAQ,CAACf,OAAO,CAACQ,IAAI,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZM,QAAQ,CAACjB,WAAW,CAACW,KAAK,CAACO,OAAO,CAAC,CAAC;IACxC;EACJ,CAAC;AAAA;AAEL,SAASL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}